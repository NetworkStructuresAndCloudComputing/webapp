name: VM CI

on:
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    # if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    env:
      INSTANCE_GROUP_NAME: webapp-igm
      REGION: us-east1
      PROJECT_ID: ${{ secrets.PROJECT_ID }}
      INSTANCE_TEMPLATE_NAME:  ${{ secrets.INSTANCE_TEMPLATE_NAME }}
      MACHINE_TYPE: e2-medium
      NETWORK_TIER: PREMIUM
      SUBNET: webapp
      SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      IMAGE: ${{ secrets.IMAGE }} 
      KMS_VM_KEY: ${{ secrets.KMS_VM_KEY }}
      POLICY: MIGRATE
      MODEL: STANDARD
      TAGS: allow-health-check
      SCOPE: https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/logging.write 
      DEVICE: persistent-disk-0
      TYPE: pd-balanced
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Zip application code
        run: |
          # Change directory to the root of the repository
          cd .

          # Zip the entire repository
          zip -r webapp.zip .

      - name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0.4.0'
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Install Packer
        run: |
          curl -O https://releases.hashicorp.com/packer/1.7.4/packer_1.7.4_linux_amd64.zip
          unzip packer_1.7.4_linux_amd64.zip
          sudo mv packer /usr/local/bin/packer
          packer version

      - name: Initiate Packer template
        run: |
          packer init packer.pkr.hcl

      - name: Validate Packer template
        run: |
          packer validate packer.pkr.hcl

      - name: Build Packer template
        run: |
          packer build packer.pkr.hcl

      - name: Create new instance template version
        run: |
          gcloud compute images list  --sort-by=~creationTimestamp --format='value(NAME)' --limit=1
          gcloud compute instance-templates create ${{env.INSTANCE_TEMPLATE_NAME}}  --project=${{env.PROJECT_ID}} --machine-type=${{env.MACHINE_TYPE}} --network-interface=network-tier=${{env.NETWORK_TIER}},subnet=${{env.SUBNET}} --metadata=startup-script=${{secrets.METADATA}} --maintenance-policy=${{env.POLICY}} --provisioning-model=${{env.MODEL}} --service-account=cloud-computing-zakir@cloudcomputing-demo-415406.iam.gserviceaccount.com --scopes=https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/logging.write --region=${{env.REGION}} --tags=${{env.TAGS}} --create-disk=auto-delete=yes,boot=yes,device-name=${{env.DEVICE}},image=projects/cloudcomputing-demo-415406/global/images/custom-image-mysql,kms-key=projects/cloudcomputing-demo-415406/locations/us-east1/keyRings/rings-of-kms-eight/cryptoKeys/vm-crypto-key,mode=rw,size=20,type=${{env.TYPE}} --no-shielded-secure-boot --shielded-vtpm --shielded-integrity-monitoring --reservation-affinity=any

      - name: Configure instance group with new template
        run: |
          gcloud compute instance-groups managed set-instance-template ${{env.INSTANCE_GROUP_NAME}}  --region=${{env.REGION}} --template=webapp-instance-template-version4 --project=${{env.PROJECT_ID}} 

      - name: Start rolling update
        run: |
          gcloud compute instance-groups managed rolling-action start-update ${{env.INSTANCE_GROUP_NAME}} --version=template="webapp-instance-template-version4" --max-surge=5 --region=${{env.REGION}} --project=${{env.PROJECT_ID}}
         
      - name: Monitor instance group update
        run: |
          status="RUNNING"
          while [ "$status" != "True" ]; do
            status=$(gcloud compute instance-groups managed describe ${{env.INSTANCE_GROUP_NAME}} m --region=${{env.REGION}}  --project=${{env.PROJECT_ID}} --format="value(status.versionTarget.isReached)")
            sleep 10
          done