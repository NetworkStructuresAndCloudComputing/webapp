name: VM CI

on:
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    # if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    env:
      IMAGE_FAMILY: "your_image_family_here"
      NEW_TEMPLATE_NAME: "your_new_template_name_here"
      EXISTING_TEMPLATE_NAME: "your_existing_template_name_here"
      REGION: "your_region_here"

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Zip application code
        run: |
          # Change directory to the root of the repository
          cd .

          # Zip the entire repository
          zip -r webapp.zip .

      - name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0.4.0'
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Install Packer
        run: |
          curl -O https://releases.hashicorp.com/packer/1.7.4/packer_1.7.4_linux_amd64.zip
          unzip packer_1.7.4_linux_amd64.zip
          sudo mv packer /usr/local/bin/packer
          packer version

      - name: Initiate Packer template
        run: |
          packer init packer.pkr.hcl

      - name: Validate Packer template
        run: |
          packer validate packer.pkr.hcl

      - name: Build Packer template
        run: |
          packer build packer.pkr.hcl

      - name: Create new instance template version
        run: |
          latest_image=$(gcloud compute images list --filter="family=${IMAGE_FAMILY}" --format="value(ID)")
          gcloud compute instance-templates create ${NEW_TEMPLATE_NAME} --source-instance-template-url ${EXISTING_TEMPLATE_NAME} --image=$latest_image --description="New template version with latest machine image" --region=${REGION}

      - name: Configure instance group with new template
        run: |
          gcloud compute instance-groups managed set-instance-template ${INSTANCE_GROUP_NAME} --template=${NEW_TEMPLATE_NAME} --zone=${ZONE}

      - name: Start rolling update
        run: |
          gcloud compute instance-groups managed rolling-action start-update ${INSTANCE_GROUP_NAME} --zone=${ZONE}

      - name: Monitor instance group update
        run: |
          status="RUNNING"
          while [ "$status" != "ROLLOUT_DONE" ]; do
            status=$(gcloud compute instance-groups managed describe ${INSTANCE_GROUP_NAME} --zone=${ZONE} --format='value(instanceGroupStatus.versionTarget.utilizationTarget)')
            sleep 10
          done
